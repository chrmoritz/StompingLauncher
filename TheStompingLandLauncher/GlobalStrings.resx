<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfigdirBody" xml:space="preserve">
    <value>Please enter a valid (not empty) configdir.</value>
  </data>
  <data name="ConfigdirHeader" xml:space="preserve">
    <value>Error: Invalid configdir</value>
  </data>
  <data name="ConfigurationNameBody" xml:space="preserve">
    <value>Please enter a valid (not empty) configuration name.</value>
  </data>
  <data name="ConfigurationNameHeader" xml:space="preserve">
    <value>Error: Invalid Configuration Name</value>
  </data>
  <data name="HostnameBody" xml:space="preserve">
    <value>Please enter a valid (not empty) hostname.</value>
  </data>
  <data name="HostnameHeader" xml:space="preserve">
    <value>Error: Invalid hostname</value>
  </data>
  <data name="PortBody" xml:space="preserve">
    <value>Please enter a valid port. (between 1 and 65535)</value>
  </data>
  <data name="PortHeader" xml:space="preserve">
    <value>Error: Invalid port</value>
  </data>
  <data name="ServerAddressBody" xml:space="preserve">
    <value>Please enter a valid server address. (eg. if you want to connect to a local server enter 127.0.0.1:7777)</value>
  </data>
  <data name="ServerAddressHeader" xml:space="preserve">
    <value>Error: Invalid server address</value>
  </data>
  <data name="SLfolderPathBody" xml:space="preserve">
    <value>Sorry, we couldn't detect your The Stomping Land folder :( Please select your Stomping Land Folder (the one containing Binaries, Engine and UDKGame) in the next dialog.</value>
  </data>
  <data name="SLfolderPathHeader" xml:space="preserve">
    <value>Warning: Couldn't detect The Stomping Land folder</value>
  </data>
  <data name="SteamQueryPortBody" xml:space="preserve">
    <value>Please enter a valid SteamQueryPort. (between 1 and 65535)</value>
  </data>
  <data name="SteamQueryPortHeader" xml:space="preserve">
    <value>Error: Invalid SteamQueryPort</value>
  </data>
  <data name="ServerAlreadyRunningBody" xml:space="preserve">
    <value>It looks like you are already running a server. You may want to quit it, because otherwise the new server will not start correctly.</value>
  </data>
  <data name="ServerAlreadyRunningHeader" xml:space="preserve">
    <value>Server already running?</value>
  </data>
  <data name="ServerStillRunningBody" xml:space="preserve">
    <value>You have to shut down your server before editing savefiles. Otherwise your changes will be overwritten.</value>
  </data>
  <data name="ServerStillRunningHeader" xml:space="preserve">
    <value>Server still running?</value>
  </data>
  <data name="ServerSaveNotExistBody" xml:space="preserve">
    <value>Please start the server at least once and the required server safefile will be created.</value>
  </data>
  <data name="ServerSaveNotExistHeader" xml:space="preserve">
    <value>Server savefile doesn't exists</value>
  </data>
  <data name="GameStillRunningBody" xml:space="preserve">
    <value>You have to shut down yourgame before editing savefiles. Otherwise your changes will be overwritten.</value>
  </data>
  <data name="GameStillRunningHeader" xml:space="preserve">
    <value>Game still running?</value>
  </data>
  <data name="InvalidPositionBody" xml:space="preserve">
    <value>Please enter a valid floating point number for X, Y and Z.</value>
  </data>
  <data name="InvalidPositionHeader" xml:space="preserve">
    <value>Error: Invalid Position</value>
  </data>
  <data name="SoloSaveNotExistBody" xml:space="preserve">
    <value>Please start the solo game modus at least once and the required solo safefile will be created.</value>
  </data>
  <data name="SoloSaveNotExistHeader" xml:space="preserve">
    <value>Solo savefile doesn't exists</value>
  </data>
  <data name="InvalidWayPointNameBody" xml:space="preserve">
    <value>Error: Invalid waypoint name</value>
  </data>
  <data name="InvalidWayPointNameHeader" xml:space="preserve">
    <value>Please enter a at least 5 characters long waypoint name.</value>
  </data>
  <data name="addHistoryButton" xml:space="preserve">
    <value>Add server to server list ...</value>
  </data>
  <data name="addHistoryTitle" xml:space="preserve">
    <value>Add server to history</value>
  </data>
  <data name="editHistoryButton" xml:space="preserve">
    <value>Edit server ...</value>
  </data>
  <data name="editHistoryTitle" xml:space="preserve">
    <value>Edit server</value>
  </data>
  <data name="bigWaterCaveEntrance" xml:space="preserve">
    <value>big water cave entrance</value>
  </data>
  <data name="bigWaterCaveExit" xml:space="preserve">
    <value>big water cave exit</value>
  </data>
  <data name="ServerShutdownBody" xml:space="preserve">
    <value>Do you really want to shutdown the server? All progress from players currently still logged in will be lost.</value>
  </data>
  <data name="ServerShutdownHeader" xml:space="preserve">
    <value>Warning: Server shutdown?</value>
  </data>
  <data name="southernLake" xml:space="preserve">
    <value>southern lake</value>
  </data>
  <data name="vulcano" xml:space="preserve">
    <value>vulcano</value>
  </data>
  <data name="vulcanoCaveEntrance" xml:space="preserve">
    <value>vulcano cave entrance</value>
  </data>
  <data name="waterfallCave" xml:space="preserve">
    <value>Waterfall cave</value>
  </data>
  <data name="westernRiverMouth" xml:space="preserve">
    <value>western river mouth</value>
  </data>
  <data name="NewVersionAvailableBody" xml:space="preserve">
    <value>A new version of The STomping Launcher is available? Would you like to download it now?</value>
  </data>
  <data name="NewVersionAvailableHeader" xml:space="preserve">
    <value>New The Stomping Launcher version available</value>
  </data>
  <data name="ReloadServerSaveBody" xml:space="preserve">
    <value>The selected configuration dir for the server savefile editor has changed. Would you like to reload the server savefile?</value>
  </data>
  <data name="ReloadServerSaveHeader" xml:space="preserve">
    <value>Server Savefile config dir changed</value>
  </data>
  <data name="PortConflictBody" xml:space="preserve">
    <value>Ihr gewählter SteamQueryPort ist entweder identisch mit den Port (benutzt vom Spiel) oder Port+1 (benutzt von der UDK engine). Die Mehrfachbelegung eines Ports wird zu Konflikten führen. Möchten Sie dennoch fortfahren?</value>
  </data>
  <data name="PortConflictHeader" xml:space="preserve">
    <value>Ports stehen in Konflikt zueinander</value>
  </data>
</root>